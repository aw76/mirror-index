{
    "CFG": {
        "BRANCH": "master-wr",
        "CACHE": "config/index-cache/layers_wrs_com",
        "DESCRIPTION": "Wind River Developer Layer Index",
        "TYPE": "restapi-web",
        "URL": "http://layers.wrs.com/layerindex/api/"
    },
    "branches": [
        {
            "bitbake_branch": "wr-10.18-20180424",
            "id": 38,
            "name": "master-wr",
            "short_description": "Wind River Linux Development",
            "sort_priority": 1,
            "update_environment": null,
            "updated": "2018-04-25T03:04:44+0000",
            "updates_enabled": true
        }
    ],
    "distros": [],
    "layerBranches": [
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "core",
            "id": 14953,
            "layer": 1,
            "updated": "2018-04-27T08:04:43+0000",
            "vcs_last_commit": "2018-04-27T08:04:43+0000",
            "vcs_last_fetch": "2018-04-27T08:04:43+0000",
            "vcs_last_rev": "ee9256d09df3cbb2581e2a49908a38a56e917649",
            "vcs_subdir": "meta",
            "version": "11",
            "yp_compatible_version": null
        },
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "openembedded-layer",
            "id": 14965,
            "layer": 7,
            "updated": "2018-04-27T02:04:46+0000",
            "vcs_last_commit": "2018-04-27T02:04:46+0000",
            "vcs_last_fetch": "2018-04-27T02:04:46+0000",
            "vcs_last_rev": "2f760b508d1814d8be19e2e257570192959ecda4",
            "vcs_subdir": "meta-oe",
            "version": "1",
            "yp_compatible_version": null
        },
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "perl-layer",
            "id": 14966,
            "layer": 13,
            "updated": "2018-04-24T06:04:28+0000",
            "vcs_last_commit": "2018-04-24T06:04:28+0000",
            "vcs_last_fetch": "2018-04-24T06:04:28+0000",
            "vcs_last_rev": "0c692caa11cd56fa330eadd9d3fbd7f7eada7dbe",
            "vcs_subdir": "meta-perl",
            "version": "1",
            "yp_compatible_version": null
        },
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "efi-secure-boot",
            "id": 56994,
            "layer": 126,
            "updated": "2018-04-24T06:04:58+0000",
            "vcs_last_commit": "2018-04-24T06:04:58+0000",
            "vcs_last_fetch": "2018-04-24T06:04:58+0000",
            "vcs_last_rev": "8f602c0caf349fdcc5306b3f64900e2f2da66c9f",
            "vcs_subdir": "meta-efi-secure-boot",
            "version": null,
            "yp_compatible_version": null
        },
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "secure-core",
            "id": 57001,
            "layer": 149,
            "updated": "2018-04-24T06:04:58+0000",
            "vcs_last_commit": "2018-04-24T06:04:58+0000",
            "vcs_last_fetch": "2018-04-24T06:04:58+0000",
            "vcs_last_rev": "8f602c0caf349fdcc5306b3f64900e2f2da66c9f",
            "vcs_subdir": "meta",
            "version": null,
            "yp_compatible_version": null
        },
        {
            "actual_branch": "wr-10.18-20180424",
            "branch": 38,
            "collection": "signing-key",
            "id": 57003,
            "layer": 129,
            "updated": "2018-04-24T06:04:58+0000",
            "vcs_last_commit": "2018-04-24T06:04:58+0000",
            "vcs_last_fetch": "2018-04-24T06:04:58+0000",
            "vcs_last_rev": "0a7dbe08c9b79d6d283915d86b9d9793a9ab07be",
            "vcs_subdir": "meta-signing-key",
            "version": null,
            "yp_compatible_version": null
        }
    ],
    "layerDependencies": [
        {
            "dependency": 7,
            "id": 10823,
            "layerbranch": 56994,
            "required": true
        },
        {
            "dependency": 13,
            "id": 10824,
            "layerbranch": 56994,
            "required": true
        },
        {
            "dependency": 129,
            "id": 10825,
            "layerbranch": 56994,
            "required": true
        },
        {
            "dependency": 1,
            "id": 10856,
            "layerbranch": 56994,
            "required": true
        },
        {
            "dependency": 120,
            "id": 12236,
            "layerbranch": 56994,
            "required": false
        },
        {
            "dependency": 149,
            "id": 12932,
            "layerbranch": 56994,
            "required": true
        }
    ],
    "layerItems": [
        {
            "classic": false,
            "description": "OpenEmbedded-Core is a layer containing the core metadata for current versions\r\nof OpenEmbedded. It is distro-less (can build a functional image with\r\nDISTRO = \"nodistro\") and contains only emulated machine support.",
            "id": 1,
            "index_preference": 1000,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "openembedded-core",
            "status": "P",
            "summary": "Core Metadata",
            "updated": "2017-08-25T17:08:12+0000",
            "usage_url": "README",
            "vcs_url": "#BASE_URL#/oe-core",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        },
        {
            "classic": false,
            "description": "Additional shared OE metadata",
            "id": 7,
            "index_preference": 0,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "meta-oe",
            "status": "P",
            "summary": "Additional shared OE metadata",
            "updated": "2017-08-25T17:08:40+0000",
            "usage_url": "README",
            "vcs_url": "#BASE_URL#/meta-openembedded",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        },
        {
            "classic": false,
            "description": "PERL language and related items",
            "id": 13,
            "index_preference": 800,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "meta-perl",
            "status": "P",
            "summary": "PERL language and related items",
            "updated": "2017-08-25T17:08:07+0000",
            "usage_url": "README",
            "vcs_url": "#BASE_URL#/meta-openembedded",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        },
        {
            "classic": false,
            "description": "This layer provides secure boot components",
            "id": 126,
            "index_preference": 0,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "meta-efi-secure-boot",
            "status": "P",
            "summary": "Secure boot components",
            "updated": "2017-09-01T17:09:49+0000",
            "usage_url": "",
            "vcs_url": "#BASE_URL#/meta-secure-core",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        },
        {
            "classic": false,
            "description": "This layer provides sample keys, by default, are used by build system to sign bootloader,\r\nkernel, IMA signature, RPM and so on. It is used for development and demonstration. The user must know what the risk is to use the sample keys in the product.",
            "id": 129,
            "index_preference": 0,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "meta-signing-key",
            "status": "P",
            "summary": "User Key Store",
            "updated": "2017-09-01T17:09:28+0000",
            "usage_url": "",
            "vcs_url": "#BASE_URL#/meta-secure-core",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        },
        {
            "classic": false,
            "description": "This layer consists of the following sub-layers: meta-efi-secure-boot, meta-integrity, meta-encrypted-storage, meta-signing-key, meta-tpm and meta-tpm2.",
            "id": 149,
            "index_preference": 0,
            "layer_type": "A",
            "mailing_list_url": "",
            "name": "meta-secure-core",
            "status": "P",
            "summary": "Provide the use cases for the Linux applications on secure boot, integrity and encryption",
            "updated": "2017-09-01T17:09:11+0000",
            "usage_url": "",
            "vcs_url": "#BASE_URL#/meta-secure-core",
            "vcs_web_file_base_url": "",
            "vcs_web_tree_base_url": "",
            "vcs_web_url": ""
        }
    ],
    "machines": [],
    "recipes": [
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "EFI Secure Boot packages for secure-environment.",
            "filename": "packagegroup-efi-secure-boot.bb",
            "filepath": "recipes-base/packagegroups",
            "homepage": "",
            "id": 343544,
            "inherits": "",
            "layerbranch": 56994,
            "license": "MIT",
            "pn": "packagegroup-efi-secure-boot",
            "provides": "packagegroup-efi-secure-boot ",
            "pv": "1.0",
            "section": "base",
            "summary": "",
            "updated": "2017-10-13T07:10:36+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "",
            "filename": "mokutil_git.bb",
            "filepath": "recipes-extended/mokutil",
            "homepage": "",
            "id": 343545,
            "inherits": "autotools pkgconfig siteconfig siteinfo",
            "layerbranch": 56994,
            "license": "GPLv3",
            "pn": "mokutil",
            "provides": "mokutil ",
            "pv": "0.3.0+gitX",
            "section": "base",
            "summary": "The utility to manipulate machines owner keys which managed in shim",
            "updated": "2017-10-13T07:10:36+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "From the EFI Tools package in the Linux user-space, it's now possible to read and manipulate the UEFI signatures database via the new efi-readvar and efi-updatevar commands. Aside from needing efitools 1.4, the EFIVARFS file-system is also needed, which was only introduced in the Linux 3.8 kernel. ",
            "filename": "efitools_git.bb",
            "filepath": "recipes-bsp/efitools",
            "homepage": "",
            "id": 343546,
            "inherits": "deploy perlnative user-key-store",
            "layerbranch": 56994,
            "license": "GPLv2",
            "pn": "efitools",
            "provides": "efitools ",
            "pv": "1.7.0+gitX",
            "section": "base",
            "summary": "Tools to support reading and manipulating the UEFI signature database",
            "updated": "2018-02-07T06:02:23+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "From the EFI Tools package in the Linux user-space, it's now possible to read and manipulate the UEFI signatures database via the new efi-readvar and efi-updatevar commands. Aside from needing efitools 1.4, the EFIVARFS file-system is also needed, which was only introduced in the Linux 3.8 kernel. ",
            "filename": "efitools-native_git.bb",
            "filepath": "recipes-bsp/efitools",
            "homepage": "",
            "id": 343547,
            "inherits": "native nopackages perlnative relocatable",
            "layerbranch": 56994,
            "license": "GPLv2",
            "pn": "efitools-native",
            "provides": "efitools-native ",
            "pv": "1.7.0+gitX",
            "section": "base",
            "summary": "Tools to support reading and manipulating the UEFI signature database",
            "updated": "2018-02-07T06:02:23+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "shim is a trivial EFI application that, when run, attempts to open and execute another application. It will initially attempt to do this via the standard EFI LoadImage() and StartImage() calls. If these fail (because secure boot is enabled and the binary is not signed with an appropriate key, for instance) it will then validate the binary against a built-in certificate. If this succeeds and if the binary or signing key are not blacklisted then shim will relocate and execute the binary.",
            "filename": "shim_git.bb",
            "filepath": "recipes-bsp/shim",
            "homepage": "https://github.com/rhinstaller/shim.git",
            "id": 343548,
            "inherits": "deploy user-key-store",
            "layerbranch": 56994,
            "license": "BSD-2-Clause",
            "pn": "shim",
            "provides": "shim ",
            "pv": "12+gitX",
            "section": "bootloaders",
            "summary": "shim is a trivial EFI application.",
            "updated": "2017-11-17T02:11:19+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "The SELoader is designed to authenticate the non-PE files, such as grub configuration, initrd, grub modules, which cannot be verified by the MOK Verify Protocol registered by shim loader. In order to conveniently authenticate the PE file with gBS->LoadImage() and gBS->StartImage(), the SELoader hooks EFI Security2 Architectural Protocol and employs MOK Verify Protocol to verify the PE file. If only UEFI Secure Boot is enabled, the SELoader just simplily calls gBS->LoadImage() and gBS->StartImage() to allow BIOS to verify PE file. The SELoader publishes MOK2 Verify Protocol which provides a flexible interface to allow the bootloader to verify the file, file buffer or memory buffer without knowing the file format. ",
            "filename": "seloader_git.bb",
            "filepath": "recipes-bsp/seloader",
            "homepage": "https://github.com/jiazhang0/SELoader",
            "id": 343549,
            "inherits": "deploy user-key-store",
            "layerbranch": 56994,
            "license": "BSD-3-Clause",
            "pn": "seloader",
            "provides": "seloader ",
            "pv": "0.4.5+gitX",
            "section": "bootloaders",
            "summary": "The bootloader capable of authenticating the PE and non-PE files.",
            "updated": "2018-03-07T03:03:18+0000"
        },
        {
            "bbclassextend": "",
            "blacklisted": "",
            "bugtracker": "",
            "description": "",
            "filename": "sbsigntool-native_git.bb",
            "filepath": "../meta-signing-key/recipes-devtools/sbsigntool",
            "homepage": "",
            "id": 343550,
            "inherits": "autotools autotools-brokensep native nopackages pkgconfig relocatable siteconfig siteinfo",
            "layerbranch": 56994,
            "license": "GPLv3",
            "pn": "sbsigntool-native",
            "provides": "sbsigntool-native ",
            "pv": "0.6+gitX",
            "section": "base",
            "summary": "Utilities for signing UEFI binaries for use with secure boot",
            "updated": "2017-11-23T02:11:42+0000"
        },
        {
            "bbclassextend": "native",
            "blacklisted": "",
            "bugtracker": "",
            "description": "This project targets to provide a generic signing framework. This framework separates the signing request and signing process and correspondingly forms the so-called signlet and signaturelet. Each signaturelet only concerns about the details about how to construct the layout of a signature format, and signlet only cares how to construct the signing request. ",
            "filename": "libsign_git.bb",
            "filepath": "../meta-signing-key/recipes-devtools/libsign",
            "homepage": "https://github.com/jiazhang0/libsign",
            "id": 343551,
            "inherits": "",
            "layerbranch": 56994,
            "license": "BSD-3-Clause",
            "pn": "libsign",
            "provides": "libsign ",
            "pv": "0.3.2+gitX",
            "section": "devel",
            "summary": "A generic signing tool framework",
            "updated": "2017-11-23T02:11:42+0000"
        }
    ],
    "wrtemplates": []
}